import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

com.sun.jini.start {

      static private curl = ConfigUtil.concat(new Object[] {
	"http://","${org.firstopen.singularity.classserver}", ":","${org.firstopen.singularity.httpd.port}"});

	static private codebase = ConfigUtil.concat(new Object[] {
               curl,"/singularity-devicemgr-1.0-MAIN.jar", 
          " ", curl,"/singularity-system-1.0-MAIN.jar",
          " ", curl,"/singularity-util-1.0-MAIN.jar",
          " ", curl,"/singularity-config-1.0-MAIN.jar",
          " ", curl,"/commons-logging-1.0.4.jar",
          " ", curl,"/log4j-1.2.9.jar",
          " ", curl,"/hibernate-3.1.jar",
          " ", curl,"/wrapper-3.1.2.jar",
          " ", curl,"/sharedvm-2.1.jar",
          " ", curl,"/tools-2.1.jar",
          " ", curl,"/jini-core-2.1.jar",
          " ", curl,"/RXTXcomm-2.1-pre17.jar",
          " ", curl,"/jbossall-client-4.0.3SP1.jar",
          " ", curl,"/xercesImpl-2.7.1.jar"});

	private static policy = ConfigUtil.concat(new Object[] {
          "${org.firstopen.singularity.home}","/conf/service.policy"});

	static classpath = ConfigUtil.concat(new Object[] {codebase});

	private static config = ConfigUtil.concat(new Object[] {
          "${org.firstopen.singularity.home}","/conf/transient-DeviceManager.config"});


	static serviceDescriptors = new ServiceDescriptor[] {

		 new NonActivatableServiceDescriptor(
			codebase, policy, classpath,
			"org.firstopen.singularity.devicemgr.DeviceManagerJiniImpl",
			 new String[] { config }
	)};
}
